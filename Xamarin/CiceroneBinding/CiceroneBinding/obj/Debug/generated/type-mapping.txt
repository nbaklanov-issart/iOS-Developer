ru/terrakok/cicerone/android/AppNavigator = RU.Terrakok.Cicerone.Android.AppNavigator
  <init>(Landroid/app/Activity;I)V = .ctor(Android.App.Activity, int)
  <init>(Landroid/app/Activity;Landroid/app/FragmentManager;I)V = .ctor(Android.App.Activity, Android.App.FragmentManager, int)
  createActivityIntent(Landroid/content/Context;Ljava/lang/String;Ljava/lang/Object;)Landroid/content/Intent; = CreateActivityIntent(Android.Content.Context, string, Java.Lang.Object)
  createStartActivityOptions(Lru/terrakok/cicerone/commands/Command;Landroid/content/Intent;)Landroid/os/Bundle; = CreateStartActivityOptions(RU.Terrakok.Cicerone.Commands.ICommand, Android.Content.Intent)
  exit()V = Exit()
  unexistingActivity(Ljava/lang/String;Landroid/content/Intent;)V = UnexistingActivity(string, Android.Content.Intent)
ru/terrakok/cicerone/android/FragmentNavigator = RU.Terrakok.Cicerone.Android.FragmentNavigator
  <init>(Landroid/app/FragmentManager;I)V = .ctor(Android.App.FragmentManager, int)
  applyCommand(Lru/terrakok/cicerone/commands/Command;)V = ApplyCommand(RU.Terrakok.Cicerone.Commands.ICommand)
  applyCommands([Lru/terrakok/cicerone/commands/Command;)V = ApplyCommands(RU.Terrakok.Cicerone.Commands.ICommand[])
  back()V = Back()
  backTo(Lru/terrakok/cicerone/commands/BackTo;)V = BackTo(RU.Terrakok.Cicerone.Commands.BackTo)
  backToUnexisting(Ljava/lang/String;)V = BackToUnexisting(string)
  createFragment(Ljava/lang/String;Ljava/lang/Object;)Landroid/app/Fragment; = CreateFragment(string, Java.Lang.Object)
  exit()V = Exit()
  forward(Lru/terrakok/cicerone/commands/Forward;)V = Forward(RU.Terrakok.Cicerone.Commands.Forward)
  replace(Lru/terrakok/cicerone/commands/Replace;)V = Replace(RU.Terrakok.Cicerone.Commands.Replace)
  setupFragmentTransaction(Lru/terrakok/cicerone/commands/Command;Landroid/app/Fragment;Landroid/app/Fragment;Landroid/app/FragmentTransaction;)V = SetupFragmentTransaction(RU.Terrakok.Cicerone.Commands.ICommand, Android.App.Fragment, Android.App.Fragment, Android.App.FragmentTransaction)
  unknownScreen(Lru/terrakok/cicerone/commands/Command;)V = UnknownScreen(RU.Terrakok.Cicerone.Commands.ICommand)
ru/terrakok/cicerone/android/SupportAppNavigator = RU.Terrakok.Cicerone.Android.SupportAppNavigator
  createActivityIntent(Landroid/content/Context;Ljava/lang/String;Ljava/lang/Object;)Landroid/content/Intent; = CreateActivityIntent(Android.Content.Context, string, Java.Lang.Object)
  createStartActivityOptions(Lru/terrakok/cicerone/commands/Command;Landroid/content/Intent;)Landroid/os/Bundle; = CreateStartActivityOptions(RU.Terrakok.Cicerone.Commands.ICommand, Android.Content.Intent)
  exit()V = Exit()
  unexistingActivity(Ljava/lang/String;Landroid/content/Intent;)V = UnexistingActivity(string, Android.Content.Intent)
ru/terrakok/cicerone/android/SupportFragmentNavigator = RU.Terrakok.Cicerone.Android.SupportFragmentNavigator
  localStackCopy = LocalStackCopy
  applyCommand(Lru/terrakok/cicerone/commands/Command;)V = ApplyCommand(RU.Terrakok.Cicerone.Commands.ICommand)
  applyCommands([Lru/terrakok/cicerone/commands/Command;)V = ApplyCommands(RU.Terrakok.Cicerone.Commands.ICommand[])
  back()V = Back()
  backTo(Lru/terrakok/cicerone/commands/BackTo;)V = BackTo(RU.Terrakok.Cicerone.Commands.BackTo)
  backToUnexisting(Ljava/lang/String;)V = BackToUnexisting(string)
  exit()V = Exit()
  forward(Lru/terrakok/cicerone/commands/Forward;)V = Forward(RU.Terrakok.Cicerone.Commands.Forward)
  replace(Lru/terrakok/cicerone/commands/Replace;)V = Replace(RU.Terrakok.Cicerone.Commands.Replace)
  unknownScreen(Lru/terrakok/cicerone/commands/Command;)V = UnknownScreen(RU.Terrakok.Cicerone.Commands.ICommand)
ru/terrakok/cicerone/BaseRouter = RU.Terrakok.Cicerone.BaseRouter
  <init>()V = .ctor()
  executeCommands([Lru/terrakok/cicerone/commands/Command;)V = ExecuteCommands(params RU.Terrakok.Cicerone.Commands.ICommand[])
ru/terrakok/cicerone/Cicerone = RU.Terrakok.Cicerone.Cicerone
  getNavigatorHolder()Lru/terrakok/cicerone/NavigatorHolder; = NavigatorHolder
  getRouter()Lru/terrakok/cicerone/BaseRouter; = Router
  create()Lru/terrakok/cicerone/Cicerone; = Create()
  create(Lru/terrakok/cicerone/BaseRouter;)Lru/terrakok/cicerone/Cicerone; = Create(Java.Lang.Object)
ru/terrakok/cicerone/commands/Back = RU.Terrakok.Cicerone.Commands.Back
  <init>()V = .ctor()
ru/terrakok/cicerone/commands/BackTo = RU.Terrakok.Cicerone.Commands.BackTo
  <init>(Ljava/lang/String;)V = .ctor(string)
  getScreenKey()Ljava/lang/String; = ScreenKey
ru/terrakok/cicerone/commands/Command = RU.Terrakok.Cicerone.Commands.ICommand
ru/terrakok/cicerone/commands/Forward = RU.Terrakok.Cicerone.Commands.Forward
  <init>(Ljava/lang/String;Ljava/lang/Object;)V = .ctor(string, Java.Lang.Object)
  getScreenKey()Ljava/lang/String; = ScreenKey
  getTransitionData()Ljava/lang/Object; = TransitionData
ru/terrakok/cicerone/commands/Replace = RU.Terrakok.Cicerone.Commands.Replace
  <init>(Ljava/lang/String;Ljava/lang/Object;)V = .ctor(string, Java.Lang.Object)
  getScreenKey()Ljava/lang/String; = ScreenKey
  getTransitionData()Ljava/lang/Object; = TransitionData
ru/terrakok/cicerone/Navigator = RU.Terrakok.Cicerone.INavigator
  applyCommands([Lru/terrakok/cicerone/commands/Command;)V = ApplyCommands(RU.Terrakok.Cicerone.Commands.ICommand[])
ru/terrakok/cicerone/NavigatorHolder = RU.Terrakok.Cicerone.INavigatorHolder
  removeNavigator()V = RemoveNavigator()
  setNavigator(Lru/terrakok/cicerone/Navigator;)V = SetNavigator(RU.Terrakok.Cicerone.INavigator)
ru/terrakok/cicerone/result/ResultListener = RU.Terrakok.Cicerone.Result.IResultListener
  onResult(Ljava/lang/Object;)V = OnResult(Java.Lang.Object)
ru/terrakok/cicerone/Router = RU.Terrakok.Cicerone.Router
  <init>()V = .ctor()
  backTo(Ljava/lang/String;)V = BackTo(string)
  exit()V = Exit()
  exitWithResult(Ljava/lang/Integer;Ljava/lang/Object;)V = ExitWithResult(Java.Lang.Integer, Java.Lang.Object)
  finishChain()V = FinishChain()
  navigateTo(Ljava/lang/String;)V = NavigateTo(string)
  navigateTo(Ljava/lang/String;Ljava/lang/Object;)V = NavigateTo(string, Java.Lang.Object)
  newRootScreen(Ljava/lang/String;)V = NewRootScreen(string)
  newRootScreen(Ljava/lang/String;Ljava/lang/Object;)V = NewRootScreen(string, Java.Lang.Object)
  newScreenChain(Ljava/lang/String;)V = NewScreenChain(string)
  newScreenChain(Ljava/lang/String;Ljava/lang/Object;)V = NewScreenChain(string, Java.Lang.Object)
  removeResultListener(Ljava/lang/Integer;)V = RemoveResultListener(Java.Lang.Integer)
  replaceScreen(Ljava/lang/String;)V = ReplaceScreen(string)
  replaceScreen(Ljava/lang/String;Ljava/lang/Object;)V = ReplaceScreen(string, Java.Lang.Object)
  sendResult(Ljava/lang/Integer;Ljava/lang/Object;)Z = SendResult(Java.Lang.Integer, Java.Lang.Object)
  setResultListener(Ljava/lang/Integer;Lru/terrakok/cicerone/result/ResultListener;)V = SetResultListener(Java.Lang.Integer, RU.Terrakok.Cicerone.Result.IResultListener)
